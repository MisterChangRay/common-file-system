<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.misterchangray.dao.mapper.CommonFileMapper">
  <resultMap id="BaseResultMap" type="com.github.misterchangray.dao.entity.CommonFile">
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_size" jdbcType="VARCHAR" property="fileSize" />
    <result column="file_suffix" jdbcType="VARCHAR" property="fileSuffix" />
    <result column="file_md5" jdbcType="VARCHAR" property="fileMd5" />
    <result column="file_type" jdbcType="VARCHAR" property="fileType" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="file_comp_path" jdbcType="VARCHAR" property="fileCompPath" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, file_name, file_size, file_suffix, file_md5, file_type, file_path, file_comp_path, 
    tag, deleted
  </sql>
  <select id="selectByQuery" parameterType="com.github.misterchangray.dao.entity.CommonFileQuery" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from common_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <delete id="deleteByQuery" parameterType="com.github.misterchangray.dao.entity.CommonFileQuery">
    delete from common_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.github.misterchangray.dao.entity.CommonFile">
    insert into common_file (id, file_name, file_size, 
      file_suffix, file_md5, file_type, 
      file_path, file_comp_path, tag, 
      deleted)
    values (#{id,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{fileSize,jdbcType=VARCHAR}, 
      #{fileSuffix,jdbcType=VARCHAR}, #{fileMd5,jdbcType=VARCHAR}, #{fileType,jdbcType=VARCHAR}, 
      #{filePath,jdbcType=VARCHAR}, #{fileCompPath,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR}, 
      #{deleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.github.misterchangray.dao.entity.CommonFile">
    insert into common_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileSize != null">
        file_size,
      </if>
      <if test="fileSuffix != null">
        file_suffix,
      </if>
      <if test="fileMd5 != null">
        file_md5,
      </if>
      <if test="fileType != null">
        file_type,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="fileCompPath != null">
        file_comp_path,
      </if>
      <if test="tag != null">
        tag,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null">
        #{fileSize,jdbcType=VARCHAR},
      </if>
      <if test="fileSuffix != null">
        #{fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="fileMd5 != null">
        #{fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null">
        #{fileType,jdbcType=VARCHAR},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="fileCompPath != null">
        #{fileCompPath,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByQuery" parameterType="com.github.misterchangray.dao.entity.CommonFileQuery" resultType="java.lang.Long">
    select count(*) from common_file
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByQuerySelective" parameterType="map">
    update common_file
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSize != null">
        file_size = #{record.fileSize,jdbcType=VARCHAR},
      </if>
      <if test="record.fileSuffix != null">
        file_suffix = #{record.fileSuffix,jdbcType=VARCHAR},
      </if>
      <if test="record.fileMd5 != null">
        file_md5 = #{record.fileMd5,jdbcType=VARCHAR},
      </if>
      <if test="record.fileType != null">
        file_type = #{record.fileType,jdbcType=VARCHAR},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.fileCompPath != null">
        file_comp_path = #{record.fileCompPath,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
      <if test="record.deleted != null">
        deleted = #{record.deleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByQuery" parameterType="map">
    update common_file
    set id = #{record.id,jdbcType=VARCHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      file_size = #{record.fileSize,jdbcType=VARCHAR},
      file_suffix = #{record.fileSuffix,jdbcType=VARCHAR},
      file_md5 = #{record.fileMd5,jdbcType=VARCHAR},
      file_type = #{record.fileType,jdbcType=VARCHAR},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      file_comp_path = #{record.fileCompPath,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR},
      deleted = #{record.deleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into common_file
    (id, file_name, file_size, file_suffix, file_md5, file_type, file_path, file_comp_path, 
      tag, deleted)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.fileName,jdbcType=VARCHAR}, #{item.fileSize,jdbcType=VARCHAR}, 
        #{item.fileSuffix,jdbcType=VARCHAR}, #{item.fileMd5,jdbcType=VARCHAR}, #{item.fileType,jdbcType=VARCHAR}, 
        #{item.filePath,jdbcType=VARCHAR}, #{item.fileCompPath,jdbcType=VARCHAR}, #{item.tag,jdbcType=VARCHAR}, 
        #{item.deleted,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into common_file (
    <foreach collection="selective" item="column" separator=",">
      ${column.value}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id' == column.value">
          #{item.id,jdbcType=VARCHAR}
        </if>
        <if test="'file_name' == column.value">
          #{item.fileName,jdbcType=VARCHAR}
        </if>
        <if test="'file_size' == column.value">
          #{item.fileSize,jdbcType=VARCHAR}
        </if>
        <if test="'file_suffix' == column.value">
          #{item.fileSuffix,jdbcType=VARCHAR}
        </if>
        <if test="'file_md5' == column.value">
          #{item.fileMd5,jdbcType=VARCHAR}
        </if>
        <if test="'file_type' == column.value">
          #{item.fileType,jdbcType=VARCHAR}
        </if>
        <if test="'file_path' == column.value">
          #{item.filePath,jdbcType=VARCHAR}
        </if>
        <if test="'file_comp_path' == column.value">
          #{item.fileCompPath,jdbcType=VARCHAR}
        </if>
        <if test="'tag' == column.value">
          #{item.tag,jdbcType=VARCHAR}
        </if>
        <if test="'deleted' == column.value">
          #{item.deleted,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>